$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module common_pkg $end
   $var wire 32 @ NR_PRIO_BITS [31:0] $end
   $var wire 32 A NR_INDEX_BITS [31:0] $end
  $upscope $end
  $scope module tb_can_clic $end
   $var wire 2 # entries[0] [1:0] $end
   $var wire 2 $ entries[1] [1:0] $end
   $var wire 2 % entries[2] [1:0] $end
   $var wire 2 & entries[3] [1:0] $end
   $var wire 2 ' entries[4] [1:0] $end
   $var wire 2 ( entries[5] [1:0] $end
   $var wire 2 ) entries[6] [1:0] $end
   $var wire 2 * entries[7] [1:0] $end
   $var wire 1 + is_interrupt $end
   $var wire 3 , index [2:0] $end
   $scope module dut $end
    $var wire 2 # entries[0] [1:0] $end
    $var wire 2 $ entries[1] [1:0] $end
    $var wire 2 % entries[2] [1:0] $end
    $var wire 2 & entries[3] [1:0] $end
    $var wire 2 ' entries[4] [1:0] $end
    $var wire 2 ( entries[5] [1:0] $end
    $var wire 2 ) entries[6] [1:0] $end
    $var wire 2 * entries[7] [1:0] $end
    $var wire 1 + is_interrupt $end
    $var wire 3 , index [2:0] $end
    $var wire 2 - e [1:0] $end
    $var wire 1 . contenders[0] $end
    $var wire 1 / contenders[1] $end
    $var wire 1 0 contenders[2] $end
    $var wire 1 1 contenders[3] $end
    $var wire 1 2 contenders[4] $end
    $var wire 1 3 contenders[5] $end
    $var wire 1 4 contenders[6] $end
    $var wire 1 5 contenders[7] $end
    $var wire 1 6 or_value $end
    $scope module unnamedblk1 $end
     $var wire 32 7 i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 8 i [31:0] $end
    $upscope $end
    $scope module unnamedblk3 $end
     $var wire 32 9 pb [31:0] $end
     $scope module unnamedblk4 $end
      $var wire 32 : i [31:0] $end
     $upscope $end
     $scope module unnamedblk5 $end
      $var wire 32 ; i [31:0] $end
     $upscope $end
    $upscope $end
    $scope module unnamedblk6 $end
     $var wire 32 < pb [31:0] $end
     $scope module unnamedblk7 $end
      $var wire 32 = i [31:0] $end
     $upscope $end
     $scope module unnamedblk8 $end
      $var wire 32 > i [31:0] $end
     $upscope $end
    $upscope $end
    $scope module unnamedblk9 $end
     $var wire 32 ? i [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b01 #
b00 $
b00 %
b01 &
b01 '
b00 (
b00 )
b01 *
0+
b111 ,
b01 -
0.
0/
00
01
02
03
04
15
16
b00000000000000000000000000001000 7
b00000000000000000000000000001000 8
b11111111111111111111111111111111 9
b00000000000000000000000000001000 :
b00000000000000000000000000001000 ;
b11111111111111111111111111111111 <
b00000000000000000000000000001000 =
b00000000000000000000000000001000 >
b00000000000000000000000000001000 ?
b00000000000000000000000000000010 @
b00000000000000000000000000000011 A
#10000
b00 *
1+
b100 ,
b00 -
12
05
06
#20000
